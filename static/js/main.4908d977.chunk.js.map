{"version":3,"sources":["Components/LandingPage.js","Components/YouHitARocket.js","Components/YouMissed.js","Components/UserMessage.js","Components/ErrorMessage.js","Components/Modal.js","Components/GameCells.js","Components/GameCells2.js","Components/GameBoard.js","App.js","serviceWorker.js","index.js"],"names":["LandingPage","className","to","href","rel","target","Component","YouHitARocket","props","getApiData","requestOne","axios","get","all","then","spread","infoOne","setState","rocketArray","catch","errors","console","log","state","this","map","rocket","data","finalRocket","rocket_id","rocketName","rocket_name","description","wikipedia","src","flickr_images","alt","YouMissed","UserMessage","isHitTrue","ErrorMessage","Modal","didWeGetAHitYet","cellArray","cellz","finalCell","find","cell","id","userInput","hasRocket","name","validateGuess","userGuess","isValidGuess","guess","length","firstChar","charAt","letter","charArray2","indexOf","number","isNaN","boardSize","button","React","createRef","escFunction","bind","event","toggleModal","keyCode","current","focus","document","body","style","overflow","addEventListener","removeEventListener","ref","aria-label","onClick","tabIndex","GameCells","prevState","open","generateRocketLocations","newArray","rocketLocation","generateRocketLocationz","numbers","ship","shipData","letterPosition","Math","floor","random","charArray","numberPosition","shipCoordinate","i","shipLength","push","location","charArrayCopy","index","splice","removeDuplicates","cellCheck","includes","handleUserInput","value","toUpperCase","callFunction","hasRocketbeenHit","checkHit","e","preventDefault","userHits","totalHits","alert","setLocation","missed","numRockets","action","onSubmit","tr","td","htmlFor","onChange","type","placeholder","required","GameCells2","GameBoard","nextPlayer","window","scrollTo","player1","player2","App","basename","process","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.4908d977.chunk.js","sourcesContent":["import React, { Component } from 'react'; \nimport { Link } from 'react-router-dom';\n\n// Home page for the application\nclass LandingPage extends Component {\n    render() {\n        return (\n            <div>\n                {/* Header with user introduction to the game */}\n                <header>\n                    <div className=\"wrapper\">\n                        <h1>Battle Rockets!</h1>\n                        <h3><span className=\"fatText\">Destroy</span> the enemy's rockets before they <span className=\"fatText\">destroy</span> yours!</h3>\n                    </div>\n                </header>\n                <main>\n                    <div className=\"wrapper\">\n                        {/* Link to proceed with the game */}\n                        <div className=\"battleLink\">\n                            <Link className=\"enterBattle\" to=\"GameBoard\">enter the battle!</Link>\n                        </div>\n                        {/* Instructions on how to play */}\n                        <h2>How to play</h2>\n                        <ul>\n                            <li>\n                                <p>SpaceX rockets are randomly generated for you and your opponent.</p>\n                            </li>\n                            <li>\n                                <p>Your main goal is to <span className=\"fatText\">destroy</span> your opponent's rockets by guessing where they are hidden on the board, one square at a time! </p>\n                            </li>\n                            <li>\n                                <p>For every rocket you hit, you get some cool info about it from SpaceX!</p>\n                            </li>\n                            <li>\n                                <p>The person who <span className=\"fatText\">destroys</span> all 4 of their opponent's rockets wins!</p>\n                            </li>\n                        </ul>                            \n                    </div>\n                </main>\n                <footer>\n                    <div className=\"wrapper\">\n                        {/* Footer with creator portfolio links */}\n                        <div className=\"footerContent\">\n                            <div className=\"creators\">\n                                <h4>Built by:</h4>\n                                <div className=\"creatorsLinks\">\n                                    <a href=\"https://alisacodes.dev/\" rel=\"noopener noreferrer\" target=\"_blank\">Alisa Kitkina</a>\n                                    <a href=\"http://marichka.ca/\" rel=\"noopener noreferrer\" target=\"_blank\">Mariya Morosovska</a>\n                                    <a href=\"http://www.mcabrera.ca/\" rel=\"noopener noreferrer\" target=\"_blank\">Miguel Cabrera</a>\n                                    <a href=\"https://lucassilbernagel.com/\" rel=\"noopener noreferrer\" target=\"_blank\">Lucas Silbernagel</a>\n                                </div>\n                            </div>\n                            {/* Credits */}\n                            <div className=\"credits\">\n                                <h4>Rocket data provided by <a href=\"https://docs.spacexdata.com/?version=latest\">SpaceX Rocket API</a></h4>\n                            </div>\n                        </div>\n                    </div>\n                </footer>\n            </div>\n        )\n    }\n}\n\nexport default LandingPage;","import React, { Component } from 'react'\nimport axios from 'axios'; \n\n// If the user hit a rocket, make an axios call and display a success message\nclass YouHitARocket extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            rocketArray: [],\n        }\n    }\n\n    // App initializer to load the API\n    componentDidMount() {\n        this.getApiData()\n    }\n\n    // Set up the axios call to get the information from the API call\n    getApiData = () => {\n        let rockets = `https://api.spacexdata.com/v3/rockets`;\n        const requestOne = axios.get(rockets);\n\n        axios.all([requestOne]).then(axios.spread((...responses) => {\n            const infoOne = responses[0];\n            this.setState({\n                rocketArray: [infoOne],\n            })\n        })).catch(errors => {\n            // We have kept this console.log on purpose, so that in case the API ever does not return information as expected, we can see why.\n            console.log(errors, 'it didnt work!')\n        })\n    }\n\n    render() {\n    return (\n        <div>\n            {/* Map into the API rocketArray to get values from it */}\n            {this.state.rocketArray.map((rocket) => {\n                const result = rocket.data;\n\n                return (\n\n                    // Map a level deeper into the rocketArray to get the specific value\n                    result.map((finalRocket) => {\n                        // if the API rocket id is equal to the rocketName passed through props, return that rocket's details.\n                        if (finalRocket.rocket_id === this.props.rocketName) {\n                        return (\n                            <div className=\"hit\">\n                                <h2>You hit a rocket!</h2>\n                                <h3><span className=\"fatText\">{finalRocket.rocket_name}</span> </h3>\n                                <p>{finalRocket.description}</p>\n                                <a className=\"extraInfo\" href={finalRocket.wikipedia} rel=\"noopener noreferrer\" target=\"_blank\">Find Out More Info</a>\n                                <div className=\"imgContainer\">\n                                    <img src={finalRocket.flickr_images[0]} alt={finalRocket.rocket_name} />\n                                </div>\n                            </div>\n                        )}\n                        return null;\n                    }))\n                })\n            }   \n            </div>\n        )    \n    }\n}\n\nexport default YouHitARocket;","import React from 'react';\n\n// If the user missed the rocket with their input, show this message.\nfunction YouMissed(props) {\n    return <div className=\"missed\"><h2>You missed! :(</h2></div>;\n}\n\nexport default YouMissed;","import React from \"react\"\nimport YouHitARocket from \"./YouHitARocket\"\nimport YouMissed from \"./YouMissed\"\n\n// This component decided if we need to show a 'You hit a rocket' or a 'You missed' message to the user\nfunction UserMessage (props) {\n    const isHitTrue = props.isHitTrue;\n    if (isHitTrue) { return <YouHitARocket rocketName = {props.rocketName}/>; } return <YouMissed />;\n}\nexport default UserMessage;","import React from 'react';\n\n// Error message in case the user enters an invalid entry into the form\nfunction ErrorMessage(props) {\n    return (\n        <div className=\"errorMessage\">\n            <h2>Please enter a valid guess!</h2>\n        </div>\n    )\n}\n\nexport default ErrorMessage;","import React from \"react\";\nimport UserMessage from \"./UserMessage\"\nimport ErrorMessage from \"./ErrorMessage\"\nimport FocusTrap from 'focus-trap-react';\n\n// Modal that shows conditional text based on user input\nexport default class Modal extends React.Component {\n  constructor(props) {\n    super(props);\n    \n      // Create ref to allow “close” button to be focused on when modal opens.\n      this.button = React.createRef();\n    \n      // Bind escape function to close modal when esc key is pressed\n      this.escFunction = this.escFunction.bind(this);\n    \n      this.state = {\n        isHitTrue: false,\n        rocketName: \"\",\n        charArray2: ['A', 'B', 'C', 'D', 'E', 'F', 'G'],\n        isValidGuess: true,\n        boardSize: 7\n      }\n  }\n\n  // Function to close modal when esc key is pressed\n  escFunction(event) {\n    const { toggleModal } = this.props;\n    if(event.keyCode === 27) {\n      toggleModal();\n    }\n  }\n\n  componentDidMount() {\n\n    // Focus on close button when modal opens\n    this.button.current.focus();\n    \n    // When modal opens, prevent the background from scrolling\n    document.body.style.overflow = 'hidden';\n    \n    // Check if a rocket was hit\n    this.didWeGetAHitYet();\n  \n    // Check if player guess is valid\n    this.validateGuess();\n    \n    // Add event listener for esc key press\n    document.addEventListener(\"keydown\", this.escFunction, false);\n  }\n\n  componentWillUnmount() {\n    \n    // Remove event listener for esc key press\n    document.removeEventListener(\"keydown\", this.escFunction, false);\n\n    // While modal is closed, allow page to scroll\n    document.body.style.overflow = 'unset';\n  }\n\n  // Function to identify if the value the user input and the cell that it connected with has a rocket and what is that rocket's name\n  didWeGetAHitYet = () => {\n    const newArray = this.props.cellArray;\n    newArray.map((cellz) => {\n      const finalCell = cellz.find(cell => {return cell.id === this.props.userInput})\n      finalCell && this.setState ({\n        isHitTrue: finalCell.hasRocket,\n        rocketName: finalCell.name\n      })\n      return null;   \n    }, this)\n  }\n\n  // Function checks if user entered a valid guess or a random string \n  validateGuess = () => {\n    const guess = this.userGuess(this.props.userInput);\n      if (!guess) {\n          this.setState({\n            isValidGuess: false\n          })\n      } else {\n          return true\n    }\n  } \n\n  // This function does the error handling to see if the user input value is valid or random\n  userGuess = (guess) => {\n    if (guess === null || guess.length !== 2) {\n    } else {\n      let firstChar = guess.charAt(0);\n      let letter = this.state.charArray2.indexOf(firstChar);\n      let number = guess.charAt(1);\n\n      // if letter or number is not a number, letters are too long/short then alert user for incorrect use. \n      if (isNaN(letter) || isNaN(number) || letter < 0 || letter > this.state.boardSize || number <= 0 || number > this.state.boardSize) {\n      } else {\n          return letter + number;\n      }\n    }\n    return null;\n}\n\n  render() {\n    const { toggleModal } = this.props;\n      if (this.state.isValidGuess) { return (\n        // If the user entered a valid guess, then return a 'You hit' or 'You missed' component.\n        <FocusTrap>\n          <div className=\"modalContainer\">\n            <div className=\"modal\">\n                <button ref={this.button} className=\"closeModal\" aria-label=\"close form\" onClick={toggleModal} tabIndex=\"0\">  \n                &times;\n                </button>\n              <UserMessage isHitTrue={this.state.isHitTrue} rocketName={this.state.rocketName} />\n            </div>\n            <div className=\"modalOverlay\" onClick={toggleModal}></div>\n          </div>\n        </FocusTrap>    \n      )\n      } return (\n        // If the user entered an invalid guess, return an error message.\n        <>\n          <div className=\"modal\">\n            <button ref={this.button} className=\"closeModal\" aria-label=\"close results pop-up\" onClick={toggleModal} tabIndex=\"0\">  \n            &times;\n            </button>\n            <ErrorMessage/>\n          </div>\n          <div className=\"modalOverlay\" onClick={toggleModal}></div>\n        </>\n      )\n  }\n}","import React, { Component } from 'react';\nimport Modal from './Modal';\n\n// Main game for Player 1\nclass GameCells extends Component {\n    constructor() {\n        super()\n        this.state = {\n            open: false,\n            userInput: '',\n            boardSize: 7,\n            charArray: ['A', 'B', 'C', 'D', 'E', 'F', 'G'],\n            rocketLocation: [\n                {\n                    id: 'falcon1',\n                    shipLength: 1,\n                    location: []\n                },\n                {\n                    id: 'falcon9',\n                    shipLength: 2,\n                    location: []\n                },\n                {\n                    id: 'falconheavy',\n                    shipLength: 3,\n                    location: []\n                },\n                {\n                    id: 'starship',\n                    shipLength: 4,\n                    location: []\n                },\n            ],\n            cellArray: [\n                [\n                    {\n                        id: 'A1',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'A2',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'A3',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'A4',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'A5',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'A6',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'A7',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                ],\n                [\n                    {\n                        id: 'B1',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'B2',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'B3',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'B4',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'B5',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'B6',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'B7',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                ],\n                [\n                    {\n                        id: 'C1',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'C2',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'C3',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'C4',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'C5',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'C6',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'C7',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                ],\n                [\n                    {\n                        id: 'D1',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'D2',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'D3',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'D4',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'D5',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'D6',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'D7',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                ],\n                [\n                    {\n                        id: 'E1',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'E2',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'E3',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'E4',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'E5',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'E6',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'E7',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                ],\n                [\n                    {\n                        id: 'F1',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'F2',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'F3',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'F4',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'F5',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'F6',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'F7',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                ],\n                [\n                    {\n                        id: 'G1',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'G2',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'G3',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'G4',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'G5',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'G6',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                    {\n                        id: 'G7',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                        missed: false\n                    },\n                ],\n            ],\n            numRockets: 4,\n            totalHits: 9,\n            userHits: 0\n        }\n    }\n\n    // lifecycle that is called once, starts off the app.\n    componentDidMount() {\n        this.generateRocketLocations();\n    }\n\n    // Function to open/close modal\n    toggleModal = () => {\n        this.setState(prevState => ({\n            open: !prevState.open\n        }));\n    };\n\n    // Generate Rocket Locations\n    generateRocketLocations = () => {\n        const newArray = this.state.rocketLocation.map((rocket) => {\n            this.generateRocketLocationz = () => {\n                const numbers = [1, 2, 3, 4, 5, 6, 7];\n\n                // function that sets the specific Letter and Number\n                const shipCoordinate = () => {\n                    // random number between 1-7\n                    const letterPosition = Math.floor(Math.random() * this.state.charArray.length );\n                    const numberPosition = Math.floor(Math.random() * 4);\n                    return {\n                        // returns the letter/number[i] of the array\n                        letter: this.state.charArray[letterPosition],\n                        number: numbers[numberPosition]\n                    }\n                }\n\n                const ship = [];\n                const shipData = shipCoordinate();\n\n                // iterating through rocket shiplength and pushing the data into ship array.\n                for (let i = 0; i < rocket.shipLength; i++) {\n                    ship.push(`${shipData.letter}${shipData.number + i}`)\n                    // setting the state location to as our new data\n                    rocket.location = ship\n                }\n\n                // Create a copy of the new array and checks to see if the character array contains the randomly selected letter\n                const removeDuplicates = () => {\n                    const charArrayCopy = this.state.charArray\n                    const index = charArrayCopy.indexOf(shipData.letter)\n                    charArrayCopy.splice(index, 1)\n                    this.setState({\n                        charArray: charArrayCopy\n                    })   \n                }\n                removeDuplicates()\n\n                // Update the cellArray to new state values for hasRocket and name properties, so that the application knows which cells have rockets and what ships they're associated with\n                const cellCheck = this.state.cellArray.map((cellz)=>{\n                    return(\n                        cellz.map((cell) => {\n                            if(rocket.location.includes(cell.id)) {\n                                cell.hasRocket = true\n                                if(rocket.location.length === 1) {\n                                    cell.name = \"falcon1\"\n                                } else if (rocket.location.length === 2) {\n                                    cell.name = \"falcon9\"\n                                } else if (rocket.location.length === 3) {\n                                    cell.name = \"falconheavy\"\n                                } else if (rocket.location.length === 4) {\n                                    cell.name = \"starship\"\n                                }\n                            }\n                        return cell\n                    }))\n                })\n                this.setState({\n                    cellArray: cellCheck\n                })\n            }\n            this.generateRocketLocationz()\n            return rocket\n        })\n        this.setState({\n            rocketLocation: newArray\n        })\n        return \n    }\n\n    // sets the userInput into state for later use and change it to upper case\n    handleUserInput = (event) => {\n        this.setState({\n            userInput: event.target.value.toUpperCase()\n        })\n    }\n\n    // anytime the user hits a rocket cell, change the className according to if statement\n    callFunction = (cell) => {\n        \n        if (cell.hasRocket === true && cell.hasRocketbeenHit === true) {\n            return 'shipHit'\n        } \n        else if (cell.hasRocket === false && cell.hasRocketbeenHit === true) {\n            return 'blankHit'\n        }\n    }\n\n    // Compare the input against the string content of the cell. \n    checkHit = (e) => {\n        // Prevents webpage from refreshing after submit\n        e.preventDefault();\n\n        this.setState({\n            userInput: \"\"\n        })\n\n        // if userHits matches the total amount of hits for the game, alert user\n        if (this.state.userHits === this.state.totalHits) {\n            alert('gameover!')\n        }\n        // mapping state property to get to next level\n        this.state.rocketLocation.map((setLocation) => {\n            // if userInput matches any of the items in location state property, add to userHit total.\n            if (setLocation.location.includes(this.state.userInput)) {\n                this.setState({\n                    userHits: this.state.userHits + 1\n                })\n            }\n                // creating a new array to replace the old state property\n                const newArray = this.state.cellArray.map((cellz) => {\n                    return (\n                        cellz.map((cell) => {\n                            // from the matched locations with user input, if also matches the cell id, change rockethasbeenhit to true\n                            if (this.state.userInput === cell.id) {\n                                \n                                cell.hasRocketbeenHit = true\n                                if (!cell.hasRocket) {\n                                    cell.missed = true\n                                }\n                            }                             \n                            return cell;\n                        })\n                    )\n                })\n                \n                // updating the previous old state with current set state.\n                this.setState({\n                    cellArray: newArray\n                }\n            )            \n        })\n    }\n\n    render() {\n        // Modal constants\n        const { open } = this.state;\n        const { toggleModal } = this;\n\n        return (\n            <div className=\"board\">\n\n                {/* calling the modal with a relative value depending on user input */}\n                {open && <Modal cellArray={this.state.cellArray} \n                    userInput={this.state.userInput}\n                    toggleModal={toggleModal}/>}\n\n                {/* Game grid */}\n                <form action=\"#\" onSubmit={this.checkHit}>\n                    <table>\n                        <tbody>\n                            {this.state.cellArray.map((tr) => {\n                                return (\n                                    <tr>\n                                        {tr.map((td) => {\n                                            return (\n                                                <td className={this.callFunction(td)}>{td.id}</td>\n                                            )\n                                        })}\n                                    </tr>\n                                )\n                            })}\n                        </tbody>\n                    </table>\n\n                    {/* User input form to guess which cell the rocket is at */}\n                    <label htmlFor=\"userInput\" className=\"sr-only\">Type a set of coordinates into this input and then press enter to check if there is a rocket in that cell. For example, A1.</label>\n                    <div className=\"input\">\n                        <input\n                            id=\"userInput\"\n                            onChange={this.handleUserInput}\n                            type=\"text\"\n                            placeholder=\"A1\"\n                            required\n                            value={this.state.userInput}\n                        />\n                        <button className=\"boomRockets\" onClick={toggleModal} id=\"fireButton\">Fire!</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default GameCells;","import React, { Component } from 'react';\nimport GameCells from './GameCells'\n\n// Main game for Player 2\nclass GameCells2 extends Component {\n  render() {\n    return (\n      <GameCells />\n    )\n  }\n}\n\nexport default GameCells2;","import React, { Component } from 'react'; \nimport GameCells from './GameCells'\nimport GameCells2 from './GameCells2'\n\n// GameBoard displays the user interface for both players\nclass GameBoard extends Component {\n    constructor() {\n        super(); \n        this.state = {\n            player1: true,\n            player2: false\n        }\n    }\n\n    // Function determines which user interface shows: player 1 or 2\n    nextPlayer = () => {\n        window.scrollTo(0,0)\n        this.setState({\n            player1: !this.state.player1,\n            player2: !this.state.player2\n        })\n    }\n\n    render() {\n        return(\n            <div className=\"wrapper\">\n                <div className=\"boardContainer\">\n                    \n                    {/* Condition showing player 1's board */}\n                    <div className={this.state.player1 ? \"player1\" : \"displayNone\"}>\n                        <h2>Player 1's turn!</h2>\n                        <p>Destroy your opponent!</p>\n                        <GameCells />\n                    </div>\n                    \n                    {/* Condition showing player 2's board */}\n                    <div className={this.state.player2 ? \"player2\" : \"displayNone\"}>\n                        <h2>Player 2's turn!</h2>\n                        <p>Destroy your opponent!</p>\n                        <GameCells2 />\n                    </div>\n                    {/* Button to toggle between user interfaces */}\n                    <button className=\"nextPlayer\" onClick={this.nextPlayer}>Next player's turn!</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default GameBoard;","import React, { Component } from 'react';\nimport './App.scss';\nimport LandingPage from './Components/LandingPage';\nimport GameBoard from './Components/GameBoard';\n\nimport { \n    BrowserRouter as Router, \n    Route } from 'react-router-dom';\n\nclass App extends Component {\n\n    render() {\n        return (\n            <Router basename={process.env.PUBLIC_URL}>\n                <Route exact path=\"/\" component={LandingPage} />\n                <Route exact path=\"/GameBoard\" component={GameBoard} />\n            </Router>\n        )\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}