{"version":3,"sources":["Components/LandingPage.js","Components/RocketsInfo.js","Components/Rockets.js","Components/Modal.js","Components/GameCells.js","Components/GameBoard.js","App.js","serviceWorker.js","index.js"],"names":["LandingPage","Fragment","className","to","href","Component","template","boardSize","rockets","falcon1","numShips","shipLength","details","locations","hits","falcon9","falconHeavy","starship","boom","boomSpot","i","rocket","this","index","location","indexOf","isSunk","shipsSunk","isDestroyed","detail","generateRocketLocations","generateRocket","collision","console","log","row","col","direction","Math","floor","random","newRocketLocations","push","j","length","Rockets","Modal","button","React","createRef","current","focus","toggleModal","props","ref","aria-label","onClick","tabIndex","GameCells","setState","prevState","open","userGuess","guess","alert","firstChar","charAt","letter","state","charArray","number","isNaN","newRocketGenerator","rocketLocation","map","randomLocation","numRockets","shipz","handleUserInput","event","userInput","target","value","callFunction","cell","hasRocketbeenHit","checkHit","e","preventDefault","setLocation","includes","newArray","cellArray","cellz","key","id","changeCellClass","empty","hit","hitClass","name","hasRocket","action","onSubmit","tr","td","onChange","type","placeholder","GameBoard","coordinates1","cells1","undefined","App","basename","process","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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B,kBAAkB,GAEtB,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,IAG1B,CACI,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,GAEtB,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,GAEtB,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,GAEtB,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,GAEtB,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,GAEtB,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,GAEtB,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,IAG1B,CACI,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,GAEtB,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,GAEtB,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,GAEtB,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,GAEtB,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,GAEtB,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,GAEtB,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,IAG1B,CACI,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,GAEtB,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,GAEtB,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,GAEtB,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,GAEtB,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,GAEtB,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,GAEtB,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,IAG1B,CACI,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,GAEtB,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,GAEtB,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,GAEtB,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,GAEtB,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,GAEtB,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,GAEtB,CACIU,GAAI,KACJM,WAAW,EACXhB,kBAAkB,KAI9B5C,mBAAoB,GACpBmC,WAAY,GAtSN,E,gEAoTVtD,KAAKkD,uB,+BAgNC,IAAD,OAGDX,EAASvC,KAAK8C,MAAdP,KACAT,EAAgB9B,KAAhB8B,YAEJ,OACI,yBAAKlD,UAAU,SACV2D,GAAQ,kBAAC,EAAD,CAAOT,YAAaA,IAC7B,kBAAC,EAAD,MAEA,yBAAKlD,UAAU,gBACf,0BAAMoG,OAAO,IAAIC,SAAUjF,KAAKgE,UAChC,+BACI,+BACKhE,KAAK8C,MAAMwB,UAAUlB,KAAI,SAAC8B,GAEvB,OAEQ,4BACKA,EAAG9B,KAAI,SAAC+B,GAEL,OAEI,wBAAIvG,UAAW,EAAKiF,aAAasB,IAAMA,EAAGV,aAyB1E,2BACIA,GAAG,YACHW,SAAUpF,KAAKwD,gBACf6B,KAAK,OACLC,YAAY,OAEhB,4BAAQpD,QAASJ,EAAa2C,GAAG,cAAjC,8B,GA5jBQ1F,aCiCTwG,E,kDAlCX,aAAe,IAAD,8BACV,gBACKzC,MAAQ,CACT0C,aAAc,GACdC,YAAQC,GAJF,E,kGAiBV,OACI,yBAAK9G,UAAU,WACX,wCACA,sDAKA,yBAAKA,UAAU,SACX,kBAAC,EAAD,Y,GA3BIG,a,QCmBT4G,E,uKAXX,OACE,kBAAC,IAAD,CAAQC,SAAUC,kBAChB,kBAAC,IAAMlH,SAAP,KACE,kBAAC,IAAD,CAAOmH,OAAK,EAACC,KAAK,IAAIC,UAAWtH,IACjC,kBAAC,IAAD,CAAOoH,OAAK,EAACC,KAAK,aAAaC,UAAWT,U,GAPlCxG,aCGEkH,QACW,cAA7BC,OAAOhG,SAASiG,UAEe,UAA7BD,OAAOhG,SAASiG,UAEhBD,OAAOhG,SAASiG,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLtG,QAAQsG,MAAMA,EAAMC,c","file":"static/js/main.01c21e0c.chunk.js","sourcesContent":["import React, { Component } from 'react'; \nimport { Link } from 'react-router-dom';\n\nclass LandingPage extends Component {\n    render() {\n        return (\n            <React.Fragment>\n                <header>\n                    <div className=\"wrapper\">\n                        <h1>Battle Rockets!</h1>\n                        <h3>Destroy enemy's rockets before they boom yours!</h3>\n                    </div>\n                </header>\n                <main>\n                    <div className=\"wrapper\">\n                        <h2>How to play</h2>\n                        <ol>\n                            <li>\n                                <p>Start by placing rockets on the board</p>\n                            </li>\n                            <li>\n                                <p>Pass the device to another player to do the same</p>\n                            </li>\n                            <li>\n                                <p>Try to hit and boom your opponent's rockets by guessing where they are hidden on the board, one square at a time</p>\n                            </li>\n                            <li>\n                                <p>The person who booms 10 rockets wins!</p>\n                            </li>\n                        </ol>                            \n                        \n                        <Link to=\"GameBoard\">enter the battle!</Link>\n\n                    </div>\n                </main>\n                <footer>\n                    <div className=\"wrapper\">\n                        <h4>Built by:</h4>\n                        <a href=\"portfolio.com\">Alisa Kitkina</a>\n                        <a href=\"portfolio.com\">Mariya Morosovska</a>\n                        <a href=\"portfolio.com\">Miguel Cabrera</a>\n                        <a href=\"https://lucassilbernagel.com/\">Lucas Silbernagel</a>\n                        <h4>Rocket data provided by <a href=\"https://docs.spacexdata.com/?version=latest\">SpaceX Rocket API</a></h4>\n                    </div>\n                </footer>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default LandingPage;","import React, { Component } from 'react';\nimport axios from 'axios'; \n\nclass RocketsInfo extends Component {\n    constructor(){\n        super();\n        this.state = {\n            allDataArray: [],\n            rocketArray: [],\n            missionArray: [],\n            shipArray: [],\n            launchArray: []\n        }\n    }\n\n    componentDidMount(){\n        // this.getRockets()\n        this.getApiData()\n    }\n    \n        getApiData = () => {\n        let rockets =`https://api.spacexdata.com/v3/rockets`;\n        let missions = `https://api.spacexdata.com/v3/missions`;\n        let ships = `https://api.spacexdata.com/v3/ships`;\n        let launches = `https://api.spacexdata.com/v3/launches`;\n        const requestOne = axios.get(rockets);\n        const requestTwo = axios.get(missions);\n        const requestThree = axios.get(ships);\n        const requestFour = axios.get(launches);\n    \n        axios.all([requestOne, requestTwo, requestThree, requestFour]).then(axios.spread((...responses) => {\n            const infoOne = responses[0];\n            const infoTwo = responses[1];\n            const infoThree = responses[2];\n            const infoFour = responses[3];\n            console.log(infoOne, infoTwo, infoThree, infoFour, responses)\n            this.setState({\n            allDataArray: responses,\n            rocketArray: [infoOne],\n            missionArray: [infoTwo],\n            shipArray: [infoThree],\n            launchArray: [infoFour]\n        })\n        // console.log(this.state.allDataArray, this.state.rocketArray, this.state.missionArray, this.state.shipArray, this.state.launchArray)\n        })).catch(errors => {\n        console.log(errors, 'it didnt work!')\n        })\n    }\n\n    // componentWillMount(){\n    // newState = [];\n    // for (let key in rocketArray){\n    //     newState.push {\n    //         id: rocketArray.data[key].id;\n    //         name: rocketArray.data[key].rocket_name\n    //     }\n    //     console.log(rocket)\n    // }\n\n    \n\n    render() {\n\n        return(\n            <div>\n                <ul>\n                    {this.state.rocketArray.map((rocket) => {\n                        const result = rocket.data;\n\n                        return(\n\n                        result.map((finalRocket) => {\n                            console.log(finalRocket.rocket_name);\n                            return(\n\n                                <li>\n                                    <h3>{finalRocket.rocket_name}</h3>\n                                    <p>{finalRocket.description}</p>\n                                    <a href={finalRocket.wikipedia}>Find Out More Info</a>\n                                    <div>\n                                        <img src={finalRocket.flickr_images[0]} alt=\"\" />\n                                    </div>\n                                </li>\n                            )\n                        }))\n                    })\n                    }                \n                </ul>\n            </div>\n        )\n    }\n}\n\nexport default RocketsInfo; ","import React, { Component } from 'react';\n\nconst template = {\n  boardSize: 7,\n  rockets: [\n    {\n      falcon1: {\n        numShips: 1,\n        shipLength: 1,\n        details: [\n          {\n            locations: [0],\n            hits: [\"\"]\n          }\n        ]\n    } },\n    {\n      falcon9: {\n        numShips: 1,\n        shipLength: 2,\n        details: [\n          {\n            locations: [0, 0],\n            hits: [\"\", \"\"]\n          }\n        ]\n    } },\n    {\n      falconHeavy: {\n        numShips: 1,\n        shipLength: 3,\n        details: [\n          {\n            locations: [0, 0, 0],\n            hits: [\"\", \"\", \"\"]\n          }\n        ]\n    } },\n    {\n      starship: {\n        numShips: 1,\n        shipLength: 4,\n        details: [\n          {\n            locations: [0, 0, 0, 0],\n            hits: [\"\", \"\", \"\", \"\"]\n          }\n        ]\n    } }\n  ],\n  boom: function (boomSpot) {\n    for (let i = 0; i < template.rockets[i].numShips; i++) {\n      let rocket = this.rockets[i];\n      let index = rocket.location.indexOf(boomSpot);\n      if (rocket.hits[index] === \"hit\") {\n        // view.displayMessage(\"You've hits this location\");\n        return true;\n      } else if (index >= 0) {\n        rocket.hits[index] = \"hit\"\n        // view.displayHit(boomSpot)\n        // view.displayMessage(\"Hit\")\n        if (this.isSunk(rocket)) {\n          // view.displayMessage(\"You sunk my battleship\")\n          this.shipsSunk++;\n        }\n        return true;\n      }\n    }\n    // view.displayMiss(boomSpot);\n    // view.displayMessage(\"You missed!\");\n    return false\n  },\n  \n  isDestroyed: function (rocket) {\n    for (let i = 0; i < template.rockets.shipLength; i++) {\n      if (template.rockets.detail.hits[i] !== \"HIT\") {\n        return false;\n      }\n    } return true;\n  },\n  generateRocketLocations: function () {\n    let locations;\n    for (let i = 0; i < template.rockets.numShips; i++) {\n      do {\n        locations = this.generateRocket(); \n      } while (this.collision(locations));\n      this.rockets[i].details.locations = locations;\n    }\n    console.log(\"rockets\");\n    console.log(this.rockets);\n  },\n  generateRocket: function() {\n    let direction = Math.floor(Math.random() * 2); \n    let row, col; \n    if (direction === 1) {\n      row = Math.floor(Math.random() * template.boardSize);\n      col = Math.floor(Math.random() * template.boardSize - template.rockets.shipLength + 1);\n    } else {\n      col = Math.floor(Math.random() * template.boardSize);\n      row = Math.floor(Math.random() * template.boardSize - template.rockets.shipLength + 1); \n    } \n    let newRocketLocations = [];\n    for (let i = 0; i < template.rockets.shipLength; i++){\n      if (direction === 1) {\n        newRocketLocations.push(row + '' + (col + 1));\n      } else {\n        newRocketLocations.push((row + 1) + '' + col);\n      } \n    }\n    return newRocketLocations; \n  },\n  collision: function(locations) {\n    for (let i = 0; i < template.rockets.numShips; i++){\n      let rocket = template.rockets[i]; \n      for (let j = 0; j < locations.length; j++) {\n        if (rocket.locations.indexOf(locations[j]) >= 0 ) {\n          return true;\n        }\n      }\n    } \n    return false\n  },\n  isSunk: function(rocket) {\n    // Looping again across the rockets array, to get the length of each rocket\n    for (let i=0; i < this.rockets[i].shipLength; i++) {\n        // Giving the 'hits' property an index. Until the rocket has been hit the amount of times equal to its length, return the rocket as still a valid target to hit.\n        if (rocket.hits[i] !== \"hit\") {\n            return false;\n        }\n    }\n    // If the ship received hits equal to its length, return that the ship has been sunk.\n    return true;\n}\n}\n\nclass Rockets extends Component {\n  \n  render() {\n    // console.log(template.boom);\n    template.boom()\n    return (\n      <div>\n        <p>Hi hello hi</p>\n      </div>\n  )\n}\n}\n\nexport default Rockets;","import React from \"react\";\n\nexport default class Modal extends React.Component {\n\n  constructor() {\n      super();\n      // Create ref to allow \"close\" button to be focused on when modal opens.\n      this.button = React.createRef();\n  }\n\n  // Focus on close button when modal opens\n  componentDidMount() {\n      this.button.current.focus();\n  }\n\n  render() {\n      const { toggleModal } = this.props;\n      return (\n        // Modal contents: close button, form, modal overlay for background\n        <React.Fragment>\n            <div className=\"modal\">\n              <button ref={this.button} className=\"closeModal\" aria-label=\"close form\" onClick={toggleModal} tabIndex=\"0\">\n              &times;\n              </button>\n              <p>You hit Falcon1</p>\n              <p>Miss!</p>\n            </div>\n            <div className=\"modalOverlay\" onClick={toggleModal}></div>\n        </React.Fragment>\n      );\n  }\n}","import React, { Component } from 'react';\nimport Rockets from './Rockets';\nimport Modal from './Modal';\nimport { Link } from 'react-router-dom';\n// import Cell from './Cell'\n\nclass GameCells extends Component {\n    constructor() {\n        super()\n        this.state = {\n            empty: true,\n            open: false,\n            userInput: '',\n            boardSize: 7,\n            charArray: [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\"],\n            hitClass: '',\n            rocketLocation: [\n                {\n                    name: 'rocket1',\n                    shipLength: 1,\n                    location: []\n\n                },\n                {\n                    name: 'rocket2',\n                    shipLength: 2,\n                    location: []\n                },\n                {\n                    name: 'rocket3',\n                    shipLength: 3,\n                    location: []\n                },\n                {\n                    name: 'rocket4',\n                    shipLength: 4,\n                    location: []\n                },\n            ],\n            cellArray: [\n                [   \n                    {\n                        id: 'A1', \n                        hasRocket: true,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'A2',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'A3',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'A4',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'A5', \n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'A6',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'A7',\n                        hasRocket: false,\n                        hasRocketbeenHit: true,\n                    },\n                ], \n                [   \n                    {\n                        id: 'B1',\n                        hasRocket: false,\n                        hasRocketbeenHit: true,\n                    },\n                    {\n                        id: 'B2',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'B3',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'B4',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'B5',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'B6',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'B7',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                ], \n                [   \n                    {\n                        id: 'C1',\n                        hasRocket: false,\n                            hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'C2',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'C3',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'C4',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'C5',\n                        hasRocket: false,\n                            hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'C6',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'C7',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                ], \n                [\n                    {\n                        id: 'D1',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'D2',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'D3',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'D4',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'D5',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'D6',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'D7',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                ], \n                [\n                    {\n                        id: 'E1',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'E2',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'E3',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'E4',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'E5',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'E6',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'E7',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                ], \n                [   \n                    {\n                        id: 'F1',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'F2',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'F3',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'F4',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'F5',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'F6',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'F7',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                ], \n                [\n                    {\n                        id: 'G1',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'G2',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'G3',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'G4',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'G5',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'G6',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                    {\n                        id: 'G7',\n                        hasRocket: false,\n                        hasRocketbeenHit: false,\n                    },\n                ],\n            ],\n            newRocketLocations: [],\n            numRockets: 4\n        }\n    }\n\n\n    // Function to open/close modal\n  toggleModal = () => {\n    this.setState(prevState => ({\n      open: !prevState.open\n    }));\n  };\n    \n    \n    componentDidMount() {\n        this.newRocketGenerator();\n    }\n\n    // userGuess function called when user submits in the input.\n    userGuess = (guess) => {\n        if (guess === null || guess.length !== 2) {\n            alert('need a valid guess please');\n        } else {\n            let firstChar = guess.charAt(0);\n            let letter = this.state.charArray.indexOf(firstChar);\n            let number = guess.charAt(1); \n\n            if (isNaN(letter) || isNaN(number)) {\n                alert(`not valid input`)\n            } else if (letter < 0 || letter >= this.state.boardSize || number < 0 || number >= this.state.boardSize) {\n                alert(`input not on the board`)\n            } else {\n                return letter + number; \n            }\n        }\n        return null;\n    }\n\n    // New Generate Rocket Location\n    newRocketGenerator = () => {\n        const newArray = this.state.rocketLocation.map(() => {\n            // generate a random letter from the charArray\n            const randomLetter = this.state.charArray[Math.floor(Math.random() * this.state.charArray.length)];\n            // generate a random number from 1 to 7\n            let randomNumber = Math.floor(Math.random() * 7) + 1;\n            let randomLocation = randomLetter + randomNumber;\n            console.log(randomLocation)\n\n            // sort method > numerically and alphabetically\n\n            // generate more sequational numbers and letters based on ship length\n            // function sequence (min, max) {\n            //     const newSequenceArray = [];\n            //     for (var i = 0; i < 3; i++) {\n            //         n.push(Math.floor(Math.random() * max) + min);\n            //     }\n            //     return n;\n            // }\n            // return a new object\n\n        })\n        // set the newArray to state\n        // we are not taking duplicates into account just yet\n        return newArray;\n    }\n\n    // Generate Rocket Location\n    generateRocketLocations = () => {\n        let locations;\n        for (let i = 0; i < this.state.numRockets; i++) {\n            do {\n            locations = this.generateRocket(); \n            } while (this.collision(locations));\n            this.state.rocketLocation[i].location = locations;\n        }\n        console.log(\"rockets\");\n        console.log(locations);\n    }\n\n    collision = (locations) => {\n        for (let i = 0; i < this.state.numRockets; i++){\n            let rocket = this.state.numRockets[i]; \n            for (let j = 0; j < 4; j++) {\n                if (this.state.rocketLocation[j].indexOf(this.state.newRocketLocations[j]) >= 0 ) {\n                    return true;\n                }\n        }\n    } \n        return false\n    }\n\n    // generate rocket randomly onto the gameboard\n    generateRocket = () => {\n    let direction = Math.floor(Math.random() * 2); \n    let row, col; \n    let newRocketLocations = [...this.state.newRocketLocations];\n    this.state.rocketLocation.map((shipz)=>{\n        \n        if (direction === 1) {\n            row = Math.floor(Math.random() * this.state.boardSize);\n            col = Math.floor(Math.random() * this.state.boardSize - shipz.shipLength + 1);\n        } else {\n            col = Math.floor(Math.random() * this.state.boardSize);\n            row = Math.floor(Math.random() * this.state.boardSize - shipz.shipLength + 1); \n        } \n\n        for (let i = 0; i < shipz.shipLength; i++){\n            console.log('hi')\n            if (direction === 1) {\n                newRocketLocations.push( row + '' + (col + 1) )\n            // newRocketLocations.push(row + '' + (col + 1));\n            } else {\n                newRocketLocations.push((row + 1) + '' + col);\n            } \n        }\n        return newRocketLocations; \n    })\n    this.setState({\n        newRocketLocations: newRocketLocations \n    })\n     }\n\n    // Declare classes in CSS to mark what's hit or missed\n    // Hard code which items in the cells array have ships\n    // > First set a ship icon to the board\n    // > If it's hit, icon changes to flames\n    // Toggle those classes\n\n    // Each cell's state\n\n    // if the cell with a state of empty has been hit && there is no ship value, state is empty else change the state to 'hit', if not stay empty\n\n    handleUserInput = (event) => {\n        this.setState({\n            userInput: event.target.value\n        })\n    }\n\n    callFunction = (cell) => {\n        // console.log(cell)\n        if (cell.hasRocketbeenHit === true) {\n            return 'shipHit'\n        } else {\n            return 'normal'\n\n        }\n    }\n\n    //compare the input against the string content of the cell. \n    checkHit = (e) => {\n        e.preventDefault();\n        this.userGuess(this.state.userInput); \n        // console.log(this.state.userInput)\n        // console.log(e.target)\n        this.state.rocketLocation.map((setLocation) => {     \n            // console.log(setLocation)\n            if (setLocation.location.includes(this.state.userInput)) {\n\n                // this.state.cellArray.map((cells) => {\n                //     // QUESTION: HOW TO ACCESS A PROPERTY ON EACH INDIVIDUAL CELL\n                //     cells.forEach(cell => {\n                //         console.log(cell)\n                //         // let newArray = [...this.state.cellArray[0]];\n                //         // console.log(newArray)\n                //         this.setState({\n                //             hasRocketbeenHit: true\n                // //         })\n                // //     });\n                // })\n                const newArray = this.state.cellArray.map((cellz, key) => {\n                    return (\n                        cellz.map((cell) => {\n                            if (this.state.userInput === cell.id) {\n\n                                cell.hasRocketbeenHit = true\n    \n                                // this is where we change state to true, which should change the color of the item.\n                            }\n                            return cell;\n                        })\n\n                    )\n                })\n                console.log(newArray)\n                this.setState ({\n                    cellArray: newArray\n                })\n            }\n        }) \n        \n        // console.log(e.target)\n        // if (this.state.rocketLocation.includes(this.state.userInput)) {\n        //     console.log(\"it works\")\n        //     this.setState({\n        //         rocketHit: !this.state.rocketHit   \n        //     });\n        // } else {\n        //     this.setState({\n        //         blankHit: !this.state.blankHit\n        //     })\n        // }\n    }\n    \n        //call clickFunction()\n    \n    changeCellClass = () => {\n        this.checkHit() \n        if (this.state.empty === false) {\n            this.setState({\n                hit: !this.state.hit\n            });\n            console.log(this.state.hit);\n        }\n    }\n\n    // handleFireButton = (e) => {\n    //     e.preventDefault();\n    //     this.setState({\n    //         open: !this.state.open\n    //     })\n    // }\n\n    \n    render() {\n\n    // Modal constants\n    const { open } = this.state;\n    const { toggleModal } = this;\n\n        return (\n            <div className=\"board\">\n                {open && <Modal toggleModal={toggleModal} />}\n                <Rockets />\n\n                <div className=\"messageArea\"></div>\n                <form action=\"#\" onSubmit={this.checkHit}>\n                <table>\n                    <tbody>\n                        {this.state.cellArray.map((tr)=>{\n                            // console.log(tr)\n                            return(\n                                \n                                    <tr>\n                                        {tr.map((td)=>{\n                                            // console.log(td)\n                                            return(\n\n                                                <td className={this.callFunction(td)}>{td.id}</td>\n                                            )\n                                        })}\n                                    </tr>\n                                \n                            )\n                        })}\n                    {/* <tr>\n                        <td\n                        className={\n                            this.state.rocketHit ? \"normal\" : \"shipHit\"}\n                        id=\"A1\"\n                        data-value=\"A1\"\n                        >\n                        A1\n                        </td>\n                        <td id=\"2\" className={this.state.rocketHit ? \"normal\" : \"shipHit\"}>A2</td>\n                        <td id=\"3\">A3</td>\n                        <td id=\"4\" className={this.state.blankHit ? \"normal\" : \"blankHit\"}>A4</td>\n                        <td id=\"5\">A5</td>\n                        <td id=\"6\">A6</td>\n                        <Cell shipYes={true} />\n                    </tr>*/}\n                    </tbody>\n                </table>\n                <input\n                    id=\"userInput\"\n                    onChange={this.handleUserInput}\n                    type=\"text\"\n                    placeholder=\"A1\"\n                />\n                <button onClick={toggleModal} id=\"fireButton\">Kill that mothafocka</button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default GameCells;","import React, { Component } from 'react'; \nimport RocketsInfo from './RocketsInfo';\nimport GameCells from './GameCells'\n\nclass GameBoard extends Component {\n    constructor() {\n        super(); \n        this.state = {\n            coordinates1: [],\n            cells1: undefined\n        }\n    }\n\n    componentDidMount() {\n        // if (this.state.cells) {\n        //     console.log(`hello`)\n        // } else {\n        //     console.log(`bye`)\n        // }\n    }\n\n    render() {\n        return(\n            <div className=\"wrapper\">\n                <h2>player 1</h2>\n                <p>place your damn rockets</p>\n\n\n                {/* <RocketsInfo /> */}\n\n                <div className=\"board\">\n                    <GameCells />\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default GameBoard;","import React, { Component } from 'react';\nimport './App.scss';\nimport LandingPage from './Components/LandingPage';\nimport GameBoard from './Components/GameBoard';\n\nimport { \n  BrowserRouter as Router, \n  Route } from 'react-router-dom';\n\nclass App extends Component {\n\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <React.Fragment>\n          <Route exact path=\"/\" component={LandingPage} />\n          <Route exact path=\"/GameBoard\" component={GameBoard} />\n        </React.Fragment>\n      </Router>\n    )\n  }\n}\n\nexport default App;\n\n// PSEUDO CODE\n\n// COMPONENTS:\n// gameBoard component;\n    // rocketInfo component;\n    // modal popup; \n// landingPage component; \n    // stores axios response! (woohoo so cool)\n    // api link: https://docs.spacexdata.com/?version=latest#5fcdb875-914f-4aef-a932-254397cf147a\n// ACTUAL PSEUDO CODE\n// 1. Landing page where the user is introduced to a start button\n    // short instructions \n        // followed by axios call to display rockets info on button press, i.e. START \n            // create a function that draws out a specific rocket (description + wiki url link thing)\n// 2. Then, display a message for player1 to place rockets on the board. After player1 is done, do the same thing for player2. GAME BOARD is made from a div that contains smaller \"cell\" divs.\n    // have two different states for player1 and player2\n    // each rocket has description to it from the axios call \n    // have a button to continue ONLY when the user completes the placing action\n\n    // THE INITIAL PLACEMENT: state is undefined ===> ships are placed ===> state is defined\n        // allow the user to rotate rockets \n        // make rockets kinda draggable (but you don't have to hold your mouse!!! wooow magic)? \n        // ERROR HANDLING: prevent the user from placing rockets TOO close to each other \n            // by toggling classes on the nearby cells ===> queue an alert \"plz need space between ships\"\n\n    // PLAYER1: CHOOSE SHIPS ===> gap page \"it's next person's turn\" ===> PLAYER2: CHOOSE SHIPS ===> gap page \"OKAY, THE BATTLE IS ABOUT TO START. PASS THE DEVICE TO THE PLAYER1!\"\n// 3. Each person's turn has TWO game boards displayed:\n    // first ===> the enemy field\n    // second ===> their own field\n    // onClick add a disabled attribute to \"cell\" ===> display results based on the ship placement \n// 4. Game ends when someone's ships are ALL destroyed ===> queue the message \"PLAYERX WON!\"+\"play again?\"\n    // to determine whether or not a rocket was destroyed:\n        // create a comparison that compares a set length of a rocket to the number of \"hits\" it received\n\n    // to determine whether or not a player missed: \n        // if state is STILL undefined ===> haha they missed ​\n    // to determine who's turn it is now\n        // if \"hit\" === true ===> playerX goes again \n        // if \"hit\" === false ===> haha loser its the other persons turn \n\n    // to determine whether or not a game has been won: \n    // check if a total of \"n\" divs have their states as \"hit\" (defined) === victory condition\n    // loop ===> in the loop \"if else\" statement\n        // statement looks for up to \"n\" divs that have their state as \"hit\" \n        // loop checks if the criteria has been fulfilled​\n\n// RESOURCES:\n// tiktaktoe ===> https://reactjs.org/tutorial/tutorial.html\n// https://github.com/victor-magarlamov/battleships?files=1\n// https://react.rocks/example/Battleships\n\n// STRETCH GOALS \n// create a unique irl \n    // self-identify themselves as player1/player2 ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}